#include "iostream"
#include "string"
#include "map"

using namespace std;

//
// Слова называются анаграммами друг друга, если одно из них можно получить перестановкой букв в другом. Например, слово «eat»
//  можно получить перестановкой букв слова «tea», поэтому эти слова являются анаграммами друг друга. Даны пары слов, 
//  проверьте для каждой из них, являются ли слова этой пары анаграммами друг друга.

// Указание
// Один из способов проверки того, являются ли слова анаграммами друг друга, заключается в следующем. Для каждого слова с 
// помощью словаря подсчитаем, сколько раз в нём встречается каждая буква. Если для обоих слов эти словари равны (а это 
// проверяется с помощью обычного оператора ==), то слова являются анаграммами друг друга, в противном случае не являются.

// При этом построение такого словаря по слову удобно вынести в отдельную функцию BuildCharCounters.
map<char, int> BuildCharCounters(const string& word) {
    map<char, int> res;
    for (const auto w : word) { 
        ++res[w];
    }
    return res;
}

int main(){
    int n;
    cin >> n;
    for (int i = 0; i < n; i++){
        string word1, word2;
        cin >> word1 >> word2;
        if (BuildCharCounters(word1) == BuildCharCounters(word2)) cout << "YES" << endl;
        else cout << "NO" << endl;
    }
    return 0;
}